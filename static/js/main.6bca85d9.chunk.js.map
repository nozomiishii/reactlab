{"version":3,"sources":["components/Modal.tsx","components/RandomColorBtn.tsx","components/CustomLink.tsx","components/FlexCenterFlame.tsx","Home.tsx","r001/SourceCode.tsx","r001/App.tsx","r002/App.tsx","App.tsx","index.tsx"],"names":["styled","div","game","RandomColorBtn","p","red","blue","green","CustomLink","to","children","Math","floor","random","FlexCenterFlame","Home","Container","SourceCode","className","overgrow","keyframes","shake","Field","Box","size","Button","App","useState","count","setCount","displayCode","setDisplayCode","onClick","prev","role","aria-label","CustomBtn","icons","icon","setIcon","length","GlobalStyle","createGlobalStyle","exact","path","component","r001","r002","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bca85d9.chunk.js","sourcesContent":["import React, { FC, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Div = styled.div<{ game: boolean }>`\n  width: 100vw;\n  height: 100vh;\n  position: absolute;\n  z-index: 100;\n  background: white;\n  display: ${({ game }) => (game ? \"none\" : \"flex\")};\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\ninterface ModalProps {\n  title: string;\n}\n\nconst Modal: FC<ModalProps> = ({ title }) => {\n  const [start, setStart] = useState(false);\n  return (\n    <Div game={start}>\n      <h1>{title}</h1>\n      <button onClick={() => setStart(true)}>start</button>\n    </Div>\n  );\n};\n\nexport default Modal;\n","import styled from \"styled-components\";\n\nconst RandomColorBtn = styled.div<{ red: number; blue: number; green: number }>`\n  background: ${(p) => `rgb(${p.red}, ${p.blue}, ${p.green})`};\n  width: 80px;\n  height: 50px;\n  border-radius: 3px;\n  &:hover {\n    opacity: 0.9;\n  }\n  a {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n    width: 100%;\n    text-decoration: none;\n    /* make color order random like complementary color..ish on Purpose */\n    color: ${(p) => `rgb(${p.green}, ${p.red}, ${p.blue})`};\n  }\n`;\n\nexport default RandomColorBtn;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport RandomColorBtn from \"./RandomColorBtn\";\n\ninterface Props {\n  to: string;\n}\nconst CustomLink: React.FC<Props> = ({ to, children }) => {\n  let red = Math.floor(Math.random() * 255);\n  let blue = Math.floor(Math.random() * 255);\n  let green = Math.floor(Math.random() * 255);\n  return (\n    <RandomColorBtn red={red} blue={blue} green={green}>\n      <Link to={to}>{children}</Link>\n    </RandomColorBtn>\n  );\n};\n\nexport default CustomLink;\n","import styled from \"styled-components\";\n\nconst FlexCenterFlame = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport default FlexCenterFlame;\n","import React from \"react\";\nimport { CustomLink } from \"./components\";\n\n// import labData from \"./db/lab.json\";\n\n// console.log(labData);\n\nconst Home: React.FC = () => {\n  return (\n    <div>\n      <h1>REACTLAB</h1>\n      <CustomLink to=\"/\">Home</CustomLink>\n      <CustomLink to=\"/r001\">R001</CustomLink>\n      <CustomLink to=\"/r002\">R002</CustomLink>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst srcCode = `\nimport React, { useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { Modal } from \"../components\";\nimport SourceCode from \"./SourceCode\";\n\nconst overgrow = keyframes\\`\n  0%{\n    background-image: linear-gradient(120deg, #d4fc79 0%, #96e6a1 100%);\n  }\n  100%{\n    background-image: linear-gradient(120deg, #84fab0 0%, #8fd3f4 100%);\n  }\n\\`;\n\nconst shake = keyframes\\`\n  0%{\n    transform: scale(1) rotate(0deg);\n  }\n  50%{\n    transform: scale(0.5) rotate(180deg);\n  }\n  100%{\n    transform: scale(1.5) rotate(360deg);\n  }\n\\`;\n\nconst Field = styled.div\\`\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n  animation: \\${overgrow} 3s infinite alternate linear;\n\\`;\n\nconst Box = styled.div<{ size: number }>\\`\n  position: absolute;\n  z-index: 10;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  user-select: none;\n  span {\n    display: inline-block;\n    font-size: \\${({ size }) => size + \"rem\"};\n    animation: \\${shake} 4s infinite linear both alternate;\n  }\n\\`;\n\nconst Button = styled.div\\`\n  position: absolute;\n  bottom: 50px;\n  right: 50px;\n  height: 80px;\n  width: 80px;\n  border: 3px solid #2e2a2e;\n  border-radius: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  user-select: none;\n  background-image: radial-gradient(\n    circle 248px at center,\n    #16d9e3 0%,\n    #30c7ec 47%,\n    #46aef7 100%\n  );\n  &:hover {\n    opacity: 0.9;\n  }\n\\`;\n\nconst Container = styled.div\\`\n  display: flex;\n\\`;\n\nconst App = () => {\n  const [count, setCount] = useState(3);\n  const [displayCode, setDisplayCode] = useState(false);\n\n  return (\n    <>\n      {/* <Modal title=\"React Lab\" /> */}\n      <Container>\n        <Field onClick={() => setCount((prev) => prev + 1)}>\n          <Box size={count}>\n            <span role=\"img\" aria-label=\"img\">\n              🦕\n            </span>\n          </Box>\n        </Field>\n        {displayCode && <SourceCode />}\n      </Container>\n      <Button onClick={() => setDisplayCode((prev) => !prev)}>\n        {displayCode ? \"✕\" : \"</>\"}\n      </Button>\n    </>\n  );\n};\n\nexport default App;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  overflow: scroll;\n`;\n\nconst SourceCode = () => {\n  return (\n    <Container>\n      <pre className=\"prettyprint\">\n        <code>{srcCode}</code>\n      </pre>\n    </Container>\n  );\n};\n\nexport default SourceCode;\n","import React, { useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n// import { Modal } from \"../components\";\nimport SourceCode from \"./SourceCode\";\n\nconst overgrow = keyframes`\n  0%{\n    background-image: linear-gradient(120deg, #d4fc79 0%, #96e6a1 100%);\n  }\n  100%{\n    background-image: linear-gradient(120deg, #84fab0 0%, #8fd3f4 100%);\n  }\n`;\n\nconst shake = keyframes`\n  0%{\n    transform: scale(1) rotate(0deg);\n  }\n  50%{\n    transform: scale(0.5) rotate(180deg);\n  }\n  100%{\n    transform: scale(1.5) rotate(360deg);\n  }\n`;\n\nconst Field = styled.div`\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n  animation: ${overgrow} 3s infinite alternate linear;\n`;\n\nconst Box = styled.div<{ size: number }>`\n  position: absolute;\n  z-index: 10;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  user-select: none;\n  span {\n    display: inline-block;\n    font-size: ${({ size }) => size + \"rem\"};\n    animation: ${shake} 4s infinite linear both alternate;\n  }\n`;\n\nconst Button = styled.div`\n  position: absolute;\n  bottom: 50px;\n  right: 50px;\n  height: 80px;\n  width: 80px;\n  border: 3px solid #2e2a2e;\n  border-radius: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  user-select: none;\n  background-image: radial-gradient(\n    circle 248px at center,\n    #16d9e3 0%,\n    #30c7ec 47%,\n    #46aef7 100%\n  );\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nconst App = () => {\n  const [count, setCount] = useState(3);\n  const [displayCode, setDisplayCode] = useState(false);\n\n  return (\n    <>\n      {/* <Modal title=\"React Lab\" /> */}\n      <Container>\n        <Field onClick={() => setCount((prev) => prev + 1)}>\n          <Box size={count}>\n            <span role=\"img\" aria-label=\"img\">\n              🦕\n            </span>\n          </Box>\n        </Field>\n        {displayCode && <SourceCode />}\n      </Container>\n      <Button onClick={() => setDisplayCode((prev) => !prev)}>\n        {displayCode ? \"✕\" : \"</>\"}\n      </Button>\n    </>\n  );\n};\n\nexport default App;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FlexCenterFlame } from \"../components\";\n\nconst CustomBtn = styled.div<{ red: number; blue: number; green: number }>`\n  background: ${(p) => `rgb(${p.red}, ${p.blue}, ${p.green})`};\n  width: 80px;\n  height: 50px;\n  border-radius: 3px;\n  &:hover {\n    opacity: 0.9;\n  }\n  user-select: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n  /* make color order random like complementary color..ish on Purpose */\n  color: ${(p) => `rgb(${p.green}, ${p.red}, ${p.blue})`};\n`;\n\nconst App = () => {\n  const icons = [\"👨🏻‍🚀\", \"🐿\", \"🦀\", \"🧞‍♀️\", \"🐸\"];\n  const [icon, setIcon] = useState<string>(\"button\");\n\n  const handleClick = () => {\n    let random = Math.floor(Math.random() * icons.length);\n    setIcon(icons[random]);\n  };\n\n  return (\n    <FlexCenterFlame>\n      <CustomBtn red={44} blue={56} green={222} onClick={handleClick}>\n        {icon}\n      </CustomBtn>\n    </FlexCenterFlame>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport r001 from \"./r001/App\";\nimport r002 from \"./r002/App\";\n\nconst GlobalStyle = createGlobalStyle`\n  *{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/reactlab\" component={Home} />\n          <Route exact path=\"/r001\" component={r001} />\n          <Route exact path=\"/r002\" component={r002} />\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}